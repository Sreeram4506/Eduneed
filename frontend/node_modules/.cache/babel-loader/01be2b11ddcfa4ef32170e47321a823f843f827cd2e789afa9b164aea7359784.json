{"ast":null,"code":"const API_BASE_URL = 'http://localhost:5000/api';\n\n// Helper function to get auth token\nconst getAuthToken = () => localStorage.getItem('token');\n\n// Helper function to make authenticated requests\nconst authRequest = async (url, options = {}) => {\n  const token = getAuthToken();\n  const headers = {\n    'Content-Type': 'application/json',\n    ...options.headers\n  };\n  if (token) {\n    headers.Authorization = `Bearer ${token}`;\n  }\n  return fetch(`${API_BASE_URL}${url}`, {\n    ...options,\n    headers\n  });\n};\n\n// Auth API\nexport const authAPI = {\n  login: async (email, password) => {\n    const response = await fetch(`${API_BASE_URL}/auth/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    return response.json();\n  },\n  register: async (email, password, role = 'user') => {\n    const response = await fetch(`${API_BASE_URL}/auth/register`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password,\n        role\n      })\n    });\n    return response.json();\n  }\n};\n\n// Files API\nexport const filesAPI = {\n  upload: async formData => {\n    const token = getAuthToken();\n    const response = await fetch(`${API_BASE_URL}/files/upload`, {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      body: formData\n    });\n    return response.json();\n  },\n  getFiles: async (params = {}) => {\n    const query = new URLSearchParams(params).toString();\n    const response = await authRequest(`/files?${query}`);\n    return response.json();\n  },\n  getFile: async id => {\n    const response = await authRequest(`/files/${id}`);\n    return response.json();\n  },\n  downloadFile: async id => {\n    const token = getAuthToken();\n    return fetch(`${API_BASE_URL}/files/${id}/download`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n};\n\n// Admin API\nexport const adminAPI = {\n  getUsers: async () => {\n    const response = await authRequest('/admin/users');\n    return response.json();\n  },\n  getFiles: async () => {\n    const response = await authRequest('/admin/files');\n    return response.json();\n  },\n  deleteFile: async id => {\n    const response = await authRequest(`/admin/files/${id}`, {\n      method: 'DELETE'\n    });\n    return response.json();\n  }\n};","map":{"version":3,"names":["API_BASE_URL","getAuthToken","localStorage","getItem","authRequest","url","options","token","headers","Authorization","fetch","authAPI","login","email","password","response","method","body","JSON","stringify","json","register","role","filesAPI","upload","formData","getFiles","params","query","URLSearchParams","toString","getFile","id","downloadFile","adminAPI","getUsers","deleteFile"],"sources":["C:/Users/SREER/OneDrive/Desktop/Desktop/openai/student-file-sharing/frontend/src/utils/api.js"],"sourcesContent":["const API_BASE_URL = 'http://localhost:5000/api';\r\n\r\n// Helper function to get auth token\r\nconst getAuthToken = () => localStorage.getItem('token');\r\n\r\n// Helper function to make authenticated requests\r\nconst authRequest = async (url, options = {}) => {\r\n  const token = getAuthToken();\r\n  const headers = {\r\n    'Content-Type': 'application/json',\r\n    ...options.headers,\r\n  };\r\n  if (token) {\r\n    headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return fetch(`${API_BASE_URL}${url}`, { ...options, headers });\r\n};\r\n\r\n// Auth API\r\nexport const authAPI = {\r\n  login: async (email, password) => {\r\n    const response = await fetch(`${API_BASE_URL}/auth/login`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ email, password }),\r\n    });\r\n    return response.json();\r\n  },\r\n  register: async (email, password, role = 'user') => {\r\n    const response = await fetch(`${API_BASE_URL}/auth/register`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ email, password, role }),\r\n    });\r\n    return response.json();\r\n  },\r\n};\r\n\r\n// Files API\r\nexport const filesAPI = {\r\n  upload: async (formData) => {\r\n    const token = getAuthToken();\r\n    const response = await fetch(`${API_BASE_URL}/files/upload`, {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: formData,\r\n    });\r\n    return response.json();\r\n  },\r\n  getFiles: async (params = {}) => {\r\n    const query = new URLSearchParams(params).toString();\r\n    const response = await authRequest(`/files?${query}`);\r\n    return response.json();\r\n  },\r\n  getFile: async (id) => {\r\n    const response = await authRequest(`/files/${id}`);\r\n    return response.json();\r\n  },\r\n  downloadFile: async (id) => {\r\n    const token = getAuthToken();\r\n    return fetch(`${API_BASE_URL}/files/${id}/download`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n  },\r\n};\r\n\r\n// Admin API\r\nexport const adminAPI = {\r\n  getUsers: async () => {\r\n    const response = await authRequest('/admin/users');\r\n    return response.json();\r\n  },\r\n  getFiles: async () => {\r\n    const response = await authRequest('/admin/files');\r\n    return response.json();\r\n  },\r\n  deleteFile: async (id) => {\r\n    const response = await authRequest(`/admin/files/${id}`, {\r\n      method: 'DELETE',\r\n    });\r\n    return response.json();\r\n  },\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}